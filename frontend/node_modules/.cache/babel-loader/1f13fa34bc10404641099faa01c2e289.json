{"ast":null,"code":"var _jsxFileName = \"/home/laiza/Documentos/All- Node/PROJETO-WEB-REACT-FRONT/frontend/src/components/user/UserCrud.jsx\",\n    _s = $RefreshSig$();\n\nimport Main from '../template/Main';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:3001/produtos'; //caso q eu quisesse alterar aqueles icons title e subt cabecalho\n\nconst headerProps = {\n  subtitle: 'cadastro'\n};\nconst initialState = {\n  nameprod: '',\n  marca: '',\n  departamento: '',\n  qtd: 0,\n  valor: 0\n};\nexport default function UserCrud() {\n  _s();\n\n  return (\n    /*#__PURE__*/\n    //Vvai para o children da main\n    _jsxDEV(Main, { ...headerProps,\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content container\",\n        children: \"teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n  const [produtos, setProd] = useState(initialState);\n  const [produtosList, setItems] = useState([]);\n  useEffect(() => {\n    const getAllProd = async () => {\n      const AllProd = await retrieveProd();\n      if (AllProd) setItems(AllProd);\n    };\n\n    getAllProd();\n  }, []);\n\n  const retrieveProd = async () => {\n    try {\n      const response = await axios.get(baseUrl);\n      setItems(response.data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const save = () => {\n    if (produtos.nameprod === '' || produtos.qtd === 0 || produtos.valor === 0) {\n      alert(\"TODOS OS CAMPOS DEVEM SER PREENCHIDOS\");\n      return;\n    }\n\n    const method = produtos.id ? 'put' : 'post';\n    const url = produtos.id ? `${baseUrl}/${produtos.id}` : baseUrl;\n    axios[method](url, produtos).then(resp => {\n      const list = getUpdateList(resp.data);\n      setItems(list);\n      clear();\n    }).catch(err => {\n      console.error(err.message);\n    });\n  };\n\n  const getUpdateList = data => {\n    const list = produtosList.filter(produtos => produtos.id !== data.id);\n    list.unshift(data);\n    return list;\n  };\n}\n\n_s(UserCrud, \"TjF2/urVgmZvatUYqsGz4XRBXMw=\");\n\n_c = UserCrud;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCrud\");","map":{"version":3,"sources":["/home/laiza/Documentos/All- Node/PROJETO-WEB-REACT-FRONT/frontend/src/components/user/UserCrud.jsx"],"names":["Main","axios","React","useState","useEffect","baseUrl","headerProps","subtitle","initialState","nameprod","marca","departamento","qtd","valor","UserCrud","produtos","setProd","produtosList","setItems","getAllProd","AllProd","retrieveProd","response","get","data","err","console","error","message","save","alert","method","id","url","then","resp","list","getUpdateList","clear","catch","filter","unshift"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAG,gCAAhB,C,CAGA;;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AADM,CAApB;AAIA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,KAAK,EAAE,EAAvB;AAA2BC,EAAAA,YAAY,EAAE,EAAzC;AAA6CC,EAAAA,GAAG,EAAE,CAAlD;AAAqDC,EAAAA,KAAK,EAAE;AAA5D,CAArB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B;AAAA;AACI;AACA,YAAC,IAAD,OAAUR,WAAV;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAUA,QAAM,CAACS,QAAD,EAAWC,OAAX,IAAsBb,QAAQ,CAACK,YAAD,CAApC;AACA,QAAM,CAACS,YAAD,EAAeC,QAAf,IAA2Bf,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,UAAU,GAAG,YAAY;AAC3B,YAAMC,OAAO,GAAG,MAAMC,YAAY,EAAlC;AACA,UAAID,OAAJ,EAAaF,QAAQ,CAACE,OAAD,CAAR;AAChB,KAHD;;AAIAD,IAAAA,UAAU;AACb,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAUlB,OAAV,CAAvB;AACAa,MAAAA,QAAQ,CAACI,QAAQ,CAACE,IAAV,CAAR;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GAPD;;AASA,QAAMC,IAAI,GAAG,MAAM;AACvB,QAAId,QAAQ,CAACN,QAAT,KAAoB,EAApB,IAA0BM,QAAQ,CAACH,GAAT,KAAe,CAAzC,IAA8CG,QAAQ,CAACF,KAAT,KAAiB,CAAnE,EAAqE;AACjEiB,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACA;AACC;;AACD,UAAMC,MAAM,GAAGhB,QAAQ,CAACiB,EAAT,GAAc,KAAd,GAAsB,MAArC;AAEA,UAAMC,GAAG,GAAGlB,QAAQ,CAACiB,EAAT,GAAe,GAAE3B,OAAQ,IAAGU,QAAQ,CAACiB,EAAG,EAAxC,GAA2C3B,OAAvD;AAEAJ,IAAAA,KAAK,CAAC8B,MAAD,CAAL,CAAcE,GAAd,EAAkBlB,QAAlB,EAECmB,IAFD,CAEMC,IAAI,IAAG;AAET,YAAMC,IAAI,GAAGC,aAAa,CAACF,IAAI,CAACX,IAAN,CAA1B;AAEAN,MAAAA,QAAQ,CAACkB,IAAD,CAAR;AAEAE,MAAAA,KAAK;AACR,KATD,EASGC,KATH,CASSd,GAAG,IAAG;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH,KAXD;AAYH,GArBG;;AAsBJ,QAAMS,aAAa,GAAIb,IAAD,IAAS;AAE3B,UAAMY,IAAI,GAAEnB,YAAY,CAACuB,MAAb,CAAqBzB,QAAD,IAAcA,QAAQ,CAACiB,EAAT,KAAgBR,IAAI,CAACQ,EAAvD,CAAZ;AAEAI,IAAAA,IAAI,CAACK,OAAL,CAAajB,IAAb;AACA,WAAOY,IAAP;AAEH,GAPD;AAQC;;GA9DuBtB,Q;;KAAAA,Q","sourcesContent":["import Main from '../template/Main'\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react'\n\nconst baseUrl = 'http://localhost:3001/produtos'\n\n\n//caso q eu quisesse alterar aqueles icons title e subt cabecalho\nconst headerProps = {\n    subtitle: 'cadastro'\n}\n\nconst initialState = { nameprod: '', marca: '', departamento: '', qtd: 0, valor: 0 }\n\nexport default function UserCrud() {\n\n    return (\n        //Vvai para o children da main\n        <Main {...headerProps}>\n            <main className=\"content container\">\n\n                teste\n\n            </main>\n        </Main>\n    )\n    const [produtos, setProd] = useState(initialState)\n    const [produtosList, setItems] = useState([])\n\n    useEffect(() => {\n        const getAllProd = async () => {\n            const AllProd = await retrieveProd()\n            if (AllProd) setItems(AllProd)\n        }\n        getAllProd()\n    }, []);\n\n    const retrieveProd = async () => {\n        try {\n            const response = await axios.get(baseUrl)\n            setItems(response.data)\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    const save = () => {\nif (produtos.nameprod==='' || produtos.qtd===0 || produtos.valor===0){\n    alert(\"TODOS OS CAMPOS DEVEM SER PREENCHIDOS\")\n    return\n    }\n    const method = produtos.id ? 'put' : 'post'\n\n    const url = produtos.id ? `${baseUrl}/${produtos.id}` :baseUrl\n\n    axios[method](url,produtos)\n\n    .then(resp =>{\n\n        const list = getUpdateList(resp.data)\n\n        setItems(list)\n\n        clear()\n    }).catch(err =>{\n        console.error(err.message)\n    })\n}\nconst getUpdateList = (data) =>{\n\n    const list= produtosList.filter((produtos) => produtos.id !== data.id)\n\n    list.unshift(data)\n    return list\n\n}\n}"]},"metadata":{},"sourceType":"module"}